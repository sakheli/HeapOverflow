//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeapOverflow.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContract", Namespace="http://schemas.datacontract.org/2004/07/WCF.DataContract")]
    [System.SerializableAttribute()]
    public partial class UserContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.CategoryContract CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.PostContract[] PostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.ReplyContract[] RepliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.RoleContract RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> assignedCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int roleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.CategoryContract Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.PostContract[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.ReplyContract[] Replies {
            get {
                return this.RepliesField;
            }
            set {
                if ((object.ReferenceEquals(this.RepliesField, value) != true)) {
                    this.RepliesField = value;
                    this.RaisePropertyChanged("Replies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.RoleContract Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> assignedCategory {
            get {
                return this.assignedCategoryField;
            }
            set {
                if ((this.assignedCategoryField.Equals(value) != true)) {
                    this.assignedCategoryField = value;
                    this.RaisePropertyChanged("assignedCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int roleId {
            get {
                return this.roleIdField;
            }
            set {
                if ((this.roleIdField.Equals(value) != true)) {
                    this.roleIdField = value;
                    this.RaisePropertyChanged("roleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryContract", Namespace="http://schemas.datacontract.org/2004/07/WCF.DataContract")]
    [System.SerializableAttribute()]
    public partial class CategoryContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.PostContract[] PostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.UserContract[] UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.PostContract[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.UserContract[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string categoryName {
            get {
                return this.categoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryNameField, value) != true)) {
                    this.categoryNameField = value;
                    this.RaisePropertyChanged("categoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleContract", Namespace="http://schemas.datacontract.org/2004/07/WCF.DataContract")]
    [System.SerializableAttribute()]
    public partial class RoleContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.UserContract[] UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.UserContract[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.roleNameField, value) != true)) {
                    this.roleNameField = value;
                    this.RaisePropertyChanged("roleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PostContract", Namespace="http://schemas.datacontract.org/2004/07/WCF.DataContract")]
    [System.SerializableAttribute()]
    public partial class PostContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.CategoryContract CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.ReplyContract[] RepliesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.UserContract UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int categoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.CategoryContract Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.ReplyContract[] Replies {
            get {
                return this.RepliesField;
            }
            set {
                if ((object.ReferenceEquals(this.RepliesField, value) != true)) {
                    this.RepliesField = value;
                    this.RaisePropertyChanged("Replies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.UserContract Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                if ((object.ReferenceEquals(this.bodyField, value) != true)) {
                    this.bodyField = value;
                    this.RaisePropertyChanged("body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                if ((this.categoryIdField.Equals(value) != true)) {
                    this.categoryIdField = value;
                    this.RaisePropertyChanged("categoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplyContract", Namespace="http://schemas.datacontract.org/2004/07/WCF.DataContract")]
    [System.SerializableAttribute()]
    public partial class ReplyContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.PostContract[] PostsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeapOverflow.ServiceReference1.UserContract UsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int userIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.PostContract[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeapOverflow.ServiceReference1.UserContract Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                if ((object.ReferenceEquals(this.bodyField, value) != true)) {
                    this.bodyField = value;
                    this.RaisePropertyChanged("body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int userId {
            get {
                return this.userIdField;
            }
            set {
                if ((this.userIdField.Equals(value) != true)) {
                    this.userIdField = value;
                    this.RaisePropertyChanged("userId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        HeapOverflow.ServiceReference1.UserContract Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.UserContract> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        bool Register(HeapOverflow.ServiceReference1.UserContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(HeapOverflow.ServiceReference1.UserContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPost", ReplyAction="http://tempuri.org/IService1/AddPostResponse")]
        bool AddPost(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.CategoryContract category, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddPost", ReplyAction="http://tempuri.org/IService1/AddPostResponse")]
        System.Threading.Tasks.Task<bool> AddPostAsync(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.CategoryContract category, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddReply", ReplyAction="http://tempuri.org/IService1/AddReplyResponse")]
        bool AddReply(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.ReplyContract reply, HeapOverflow.ServiceReference1.UserContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddReply", ReplyAction="http://tempuri.org/IService1/AddReplyResponse")]
        System.Threading.Tasks.Task<bool> AddReplyAsync(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.ReplyContract reply, HeapOverflow.ServiceReference1.UserContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPosts", ReplyAction="http://tempuri.org/IService1/GetPostsResponse")]
        HeapOverflow.ServiceReference1.PostContract[] GetPosts(HeapOverflow.ServiceReference1.CategoryContract category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPosts", ReplyAction="http://tempuri.org/IService1/GetPostsResponse")]
        System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.PostContract[]> GetPostsAsync(HeapOverflow.ServiceReference1.CategoryContract category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPost", ReplyAction="http://tempuri.org/IService1/GetPostResponse")]
        HeapOverflow.ServiceReference1.PostContract GetPost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPost", ReplyAction="http://tempuri.org/IService1/GetPostResponse")]
        System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.PostContract> GetPostAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPostsByUserId", ReplyAction="http://tempuri.org/IService1/GetPostsByUserIdResponse")]
        HeapOverflow.ServiceReference1.PostContract[] GetPostsByUserId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPostsByUserId", ReplyAction="http://tempuri.org/IService1/GetPostsByUserIdResponse")]
        System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.PostContract[]> GetPostsByUserIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePost", ReplyAction="http://tempuri.org/IService1/DeletePostResponse")]
        bool DeletePost(int userId, HeapOverflow.ServiceReference1.PostContract post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePost", ReplyAction="http://tempuri.org/IService1/DeletePostResponse")]
        System.Threading.Tasks.Task<bool> DeletePostAsync(int userId, HeapOverflow.ServiceReference1.PostContract post);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : HeapOverflow.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<HeapOverflow.ServiceReference1.IService1>, HeapOverflow.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeapOverflow.ServiceReference1.UserContract Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.UserContract> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public bool Register(HeapOverflow.ServiceReference1.UserContract user) {
            return base.Channel.Register(user);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(HeapOverflow.ServiceReference1.UserContract user) {
            return base.Channel.RegisterAsync(user);
        }
        
        public bool AddPost(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.CategoryContract category, int userId) {
            return base.Channel.AddPost(post, category, userId);
        }
        
        public System.Threading.Tasks.Task<bool> AddPostAsync(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.CategoryContract category, int userId) {
            return base.Channel.AddPostAsync(post, category, userId);
        }
        
        public bool AddReply(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.ReplyContract reply, HeapOverflow.ServiceReference1.UserContract user) {
            return base.Channel.AddReply(post, reply, user);
        }
        
        public System.Threading.Tasks.Task<bool> AddReplyAsync(HeapOverflow.ServiceReference1.PostContract post, HeapOverflow.ServiceReference1.ReplyContract reply, HeapOverflow.ServiceReference1.UserContract user) {
            return base.Channel.AddReplyAsync(post, reply, user);
        }
        
        public HeapOverflow.ServiceReference1.PostContract[] GetPosts(HeapOverflow.ServiceReference1.CategoryContract category) {
            return base.Channel.GetPosts(category);
        }
        
        public System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.PostContract[]> GetPostsAsync(HeapOverflow.ServiceReference1.CategoryContract category) {
            return base.Channel.GetPostsAsync(category);
        }
        
        public HeapOverflow.ServiceReference1.PostContract GetPost(int id) {
            return base.Channel.GetPost(id);
        }
        
        public System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.PostContract> GetPostAsync(int id) {
            return base.Channel.GetPostAsync(id);
        }
        
        public HeapOverflow.ServiceReference1.PostContract[] GetPostsByUserId(int id) {
            return base.Channel.GetPostsByUserId(id);
        }
        
        public System.Threading.Tasks.Task<HeapOverflow.ServiceReference1.PostContract[]> GetPostsByUserIdAsync(int id) {
            return base.Channel.GetPostsByUserIdAsync(id);
        }
        
        public bool DeletePost(int userId, HeapOverflow.ServiceReference1.PostContract post) {
            return base.Channel.DeletePost(userId, post);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePostAsync(int userId, HeapOverflow.ServiceReference1.PostContract post) {
            return base.Channel.DeletePostAsync(userId, post);
        }
    }
}
